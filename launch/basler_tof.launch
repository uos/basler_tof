<launch>
  <!-- "camera" should uniquely identify the device. All topics are pushed down
       into the "camera" namespace, and it is prepended to tf frame ids. -->
  <arg name="camera"     default="camera" />
  <arg name="frame_id"   default="$(arg camera)_optical_frame" />
  <arg name="publish_tf" default="true" />

  <arg name="basler_tof_path" default="/opt/BaslerToF" />

  <!-- device_id can have the following formats:
        "21781335" : Use device with given serial number
        "#1"       : Use first device found
  -->
  <arg name="device_id" default="#1" />
  <arg name="device_channel" default="0" />

  <!-- URL specifying the location of calibration data for the camera -->
  <arg name="camera_info_url" default="package://basler_tof/camera_info/TOF_ES_21781335.yaml" />

  <arg name="points_xyz"    default="true" />
  <arg name="rectify_depth" default="true" />

  <include file="$(find basler_tof)/launch/includes/device.launch.xml">
    <arg name="camera"          default="$(arg camera)" />
    <arg name="device_id"       default="$(arg device_id)" />
    <arg name="frame_id"        default="$(arg frame_id)" />
    <arg name="publish_tf"      default="$(arg publish_tf)" />
    <arg name="basler_tof_path" default="$(arg basler_tof_path)" />
    <arg name="camera_info_url" default="$(arg camera_info_url)" />
    <arg name="device_channel"  default="$(arg device_channel)" />
  </include>

  <include file="$(find basler_tof)/launch/includes/processing.launch.xml">
    <arg name="camera"          default="$(arg camera)" />
    <arg name="points_xyz"      default="$(arg points_xyz)" />
    <arg name="rectify_depth"   default="$(arg rectify_depth)" />
  </include>
</launch>
